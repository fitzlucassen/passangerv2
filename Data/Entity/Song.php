<?php 
	/**********************************************************
	 **** File generated by fitzlucassen\DALGenerator tool ****
	 * All right reserved to fitzlucassen repository on github*
	 ************* https://github.com/fitzlucassen ************
	 **********************************************************/
	namespace fitzlucassen\FLFramework\Data\Entity;

	use fitzlucassen\FLFramework\Library\Core as cores;

	class Song {
		private $_id;
		private $_filename;
		private $_title;
		private $_description;
		private $_duration;
		private $_lang;
		private $_album;
		private $_idAlbum;
		private $_queryBuilder;

		public function __construct($id = "", $filename = "", $title = "", $description = "", $duration = "", $lang = "", $idAlbum = ""){
			$this->_queryBuilder = new cores\QueryBuilder(true);
			$this->fillObject(array("id" => $id, "filename" => $filename, "title" => $title, "description" => $description, "duration" => $duration, "lang" => $lang, "idAlbum" => $idAlbum));
		}

		/***********
		 * GETTERS *
		 ***********/
		public function getId() {
			return $this->_id;
		}
		public function getFilename() {
			return $this->_filename;
		}
		public function getTitle() {
			return $this->_title;
		}
		public function getDescription() {
			return $this->_description;
		}
		public function getDuration() {
			return $this->_duration;
		}
		public function getLang() {
			return $this->_lang;
		}
		public function getAlbum() {
			$query = $this->_queryBuilder->select() 
											  ->from("album")
											  ->where(array(array("link" => "", "left" => "id", "operator" => "=", "right" => $this->_idAlbum)))->getQuery();
			try {
				$result = $this->_pdo->Select($query);
				$o = new Album();
				$o->fillObject($result);
				return $o;
			}
			catch(PDOException $e){
				print $e->getMessage();
			}
			return array();
		}

		public function getIdAlbum() {
			return $this->_idAlbum;
		}
		/*******
		 * END *
		 *******/

		public function fillObject($properties) {
			if(!empty($properties["id"]))
				$this->_id = $properties["id"];
			if(!empty($properties["filename"]))
				$this->_filename = $properties["filename"];
			if(!empty($properties["title"]))
				$this->_title = $properties["title"];
			if(!empty($properties["description"]))
				$this->_description = $properties["description"];
			if(!empty($properties["duration"]))
				$this->_duration = $properties["duration"];
			if(!empty($properties["lang"]))
				$this->_lang = $properties["lang"];
			if(!empty($properties["idAlbum"]))
				$this->_idAlbum = $properties["idAlbum"];
		}
	}
